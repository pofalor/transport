using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Transport
{
    public static class AnalyzePotential
    {
        public static int[][] GetOptimizedSolution()
        {

            //1. Найти отрицательный наименьший элемент. Запоминаем, что это за ячейка и вызывааем метод оптимизации по ячейке

            //2. Проверяем есть ли отрицательные элементы, если есть, повторяем алгоритм
            var a = new int[1][];
            return a;
        }

        public static int[][] OptimizeSolution(Element[][] transportPlan)
        {
            //TODO: пока я ищу сам ячейку с минимальным значением, в будущем надо будет передавать в метод индекс
            //transportPlan.fi    
            var a = new int[1][];
            return a;
            //2. Выбираем ячейку с самым маленьким значением
            //3. Цикл перераспределения поставок
            // 3.1 Найти путь, по которому можно пройти так, чтобы можно было создать замкнутый круг и двигаться можно только влево, вправо, вверх, вниз
            //3.2 После этого переходим к ячейке, которую нужно добавить в решение
            //3.3. смотрим две связанные ячейки друг с другм. Берём мин значение из двух. 
            //3.4. В новую ячейку ставим мин. значение
            //3.5. Корректируем значения во всех соответствующих ячейках, при этом если двигаемся вниз или вверх, то корректируем по столбцу. Если влево или вправо, то корректируем по строке.
        }
    }
}
